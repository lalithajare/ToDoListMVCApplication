# Android

# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android
#latest

trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug'

- task: CopyFiles@2
  inputs:
    contents: '**/*.apk'
    targetFolder: '$(build.artifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(build.artifactStagingDirectory)'
    artifactName: 'drop'
    artifactType: 'container'



# - task: SonarQubePrepare@4
#   inputs:
#     SonarQube: 'Sonar Qube'
#     scannerMode: 'Other'

# - task: SonarQubeAnalyze@4

- script: bash xccov-to-sonarqube-generic.sh Build/Logs/Test/{testpass}.xcresult/{#}_Test/action.xcovreport/*.xccovarchive/ > sonarqube-generic-coverage.xml

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonar'
    organization: 'lalit'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'da3649de09fd56761b233c0c8996bc52d60f0cb4'
    cliProjectName: 'ToDoApp'
    cliSources: '$(system.defaultworkingdirectory)'
    extraProperties: 
       'sonar.organization=lalit,
        sonar.sources=java,
        sonar.branch.name=master,
        sonar.branch.target=master,
        sonar.projectVersion=1.0,
        sonar.java.coverage.reportPath=Coverage.report,
        sonar.java.coverage.reportPattern=sonar-reports/coverage*.xml'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'



